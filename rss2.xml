<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>codingPpushu&#39;s dev story</title>
    <link>https://codingppushu.github.io/</link>
    
    <atom:link href="https://codingppushu.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Mon, 12 Apr 2021 14:24:10 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>TIL-210412</title>
      <link>https://codingppushu.github.io/2021/04/12/TIL-210412/</link>
      <guid>https://codingppushu.github.io/2021/04/12/TIL-210412/</guid>
      <pubDate>Mon, 12 Apr 2021 14:14:39 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;Full stack </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>Full stack - Clone Coding</th>  <tr style="text-align:center; background-color:#fff">    <td>passport-local-mongoose</td>    <td>array push</td>    <td>populate</td>    <td>video routes 보호</td>  </tr>  <tr style="text-align:center; background-color:#fff">    <td>mixin</td>    <td>play() / pause()</td>    <td>mute property</td>    <td>webkitRequestFullscreen()<br>webkitExitFullscreen()</td>  </tr></table><h1 id="How"><a href="#How" class="headerlink" title="How?"></a>How?</h1><ul><li><p>Change Password<br>=&gt; passport-local-mongoose 사용 (이전에 설치함)<br>=&gt; 암호화 된 패스워드를 현재 패스워드와 비교한다.</p></li><li><p>Adding Creator to Video<br>=&gt; user 없이 video upload 되지 않게 수정<br>=&gt; video 생성시 creatro id 저장해야함<br>=&gt; video id를 array push로 넣는다.<br>=&gt; populate : object id 타입에만 사용할 수 있음</p></li><li><p>Protecting Video Routes<br>=&gt; video routes 보호를 위한 코드 작성<br>=&gt; 영상 업로드 한 유저 영상 모아보기 처리<br>=&gt; user를 얻을 때 video들도 얻어내야함</p></li><li><p>Starting the Video Player<br>=&gt; mixin 만들어 템플릿에 코드 추가<br>=&gt; 스타일링 완료</p></li><li><p>Play Pause Functionallity<br>=&gt; 재생, 정지 기능 추가<br>=&gt; play() / pause();</p></li><li><p>Mute Unmute<br>=&gt; mute property</p></li><li><p>Enter Fullscreen Exit Fullscreen<br>=&gt; 이벤트 리스너를 변경하고 제거해주는 방식으로 처리<br>=&gt; webkitRequestFullscreen() / webkitExitFullscreen()</p></li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/04/12/TIL-210412/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210409</title>
      <link>https://codingppushu.github.io/2021/04/09/TIL-210409/</link>
      <guid>https://codingppushu.github.io/2021/04/09/TIL-210409/</guid>
      <pubDate>Fri, 09 Apr 2021 14:50:51 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;Full stack </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>Full stack - Clone Coding</th>  <tr style="text-align:center; background-color:#fff">    <td>multer</td>  </tr></table><h1 id="How"><a href="#How" class="headerlink" title="How?"></a>How?</h1><ul><li>Edit User Profile<br>=&gt; Profile page Avatar image, id 수정 가능하게 구현<br>=&gt; multer 이용해 uploadAvatar 구현<br>=&gt; editprofile pug 파일에 인코딩 속성 추가<br>=&gt; 이미지 파일 형식만 들어오게 수정</li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/04/09/TIL-210409/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210408</title>
      <link>https://codingppushu.github.io/2021/04/08/TIL-210408/</link>
      <guid>https://codingppushu.github.io/2021/04/08/TIL-210408/</guid>
      <pubDate>Thu, 08 Apr 2021 14:47:13 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;Full stack </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>Full stack - Clone Coding</th>  <tr style="text-align:center; background-color:#fff">    <td>express session</td>    <td>resave</td>    <td>saveUninitialized</td>    <td>MongoStore</td>  </tr>  <tr style="text-align:center; background-color:#fff">    <td>github login</td>    <td>kakao login</td>    <td>Relationships</td>    <td></td>  </tr> </table><h1 id="How"><a href="#How" class="headerlink" title="How?"></a>How?</h1><ul><li><p>Sessions on Express<br>=&gt; express session : 세션 관리 위함 (설치)<br>=&gt; env에 환경변수 추가<br>=&gt; resave 설정<br>=&gt; saveUninitialized 설정<br>=&gt; 서버는 사용자가 어떤 쿠키를 가지고 있는지 알아야 함</p></li><li><p>MongoStore and Middlewares<br>=&gt; 데이터베이스를 사용해 세션 저장<br>=&gt; cokiestore와 mongo 간 연결 만들어 줌<br>=&gt; routes 출입 제한 설정</p></li><li><p>Github Log In part One<br>=&gt; passport를 이용해 github login 구현<br>=&gt; passport를 이용해 kakao login 구현</p></li><li><p>Relationships<br>=&gt; user profile : styling, routes 수정</p></li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/04/08/TIL-210408/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210407</title>
      <link>https://codingppushu.github.io/2021/04/07/TIL-210407/</link>
      <guid>https://codingppushu.github.io/2021/04/07/TIL-210407/</guid>
      <pubDate>Wed, 07 Apr 2021 14:33:21 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;Full stack </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>Full stack - Clone Coding</th>  <tr style="text-align:center; background-color:#fff">    <td>user authentication</td>    <td>cookie</td>    <td>passport</td>    <td>user model</td>  </tr>  <tr style="text-align:center; background-color:#fff">    <td>seializeUser / deserializeUser</td>    <td></td>    <td></td>    <td></td>  </tr> </table><h1 id="How"><a href="#How" class="headerlink" title="How?"></a>How?</h1><ul><li>User authentication<br>=&gt; 사용자 인증 : passport 미들웨어 사용<br>=&gt; cookie<br>=&gt; passport-local-mongoose 설치<br>=&gt; user model 생성 및 import(init)<br>=&gt; seializeUser : user id<br>=&gt; deserializeUser<br>=&gt; controller postjoin 함수 수정</li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/04/07/TIL-210407/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210406</title>
      <link>https://codingppushu.github.io/2021/04/06/TIL-210406/</link>
      <guid>https://codingppushu.github.io/2021/04/06/TIL-210406/</guid>
      <pubDate>Tue, 06 Apr 2021 14:04:21 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;Full stack </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>Full stack - Clone Coding</th>  <tr style="text-align:center; background-color:#fff">    <td style="width:50%">sass</td>    <td style="width:50%">nodemon</td>  </tr> </table><h1 id="How"><a href="#How" class="headerlink" title="How?"></a>How?</h1><ul><li>STYLING<br>=&gt; sass 이용한 스타일링 완료<br>=&gt; nodemon은 css 저장할 때 마다 server 재시작해 package.json –ignore ‘scss’ 추가</li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/04/06/TIL-210406/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210405</title>
      <link>https://codingppushu.github.io/2021/04/05/TIL-210405/</link>
      <guid>https://codingppushu.github.io/2021/04/05/TIL-210405/</guid>
      <pubDate>Mon, 05 Apr 2021 14:31:13 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;Full stack </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>Full stack - Clone Coding</th>  <tr style="text-align:center; background-color:#fff">    <td style="width:50%">regular expression</td>    <td style="width:50%">webpack</td>  </tr> </table><h1 id="How"><a href="#How" class="headerlink" title="How?"></a>How?</h1><ul><li><p>Searching Videos<br>=&gt; regular expression (정규표현식) : string으로 부터 캐릭터를 가져옴.<br>=&gt; video controller 에서 비디오를 찾으면 값을 바꿈<br>=&gt; 완전 일치가 아닌 일부 포함된 단어를 찾음 (mongoose regex 사용(여러가지 옵션 있음))</p></li><li><p>WEBPACK<br>=&gt; module bundler<br>=&gt; package.json : 백엔드 부분과 프론트 부분을 분리해주는 script 작성<br>=&gt; webpack.config.js : 설정 작성 (webpack 호출되면 가장 먼저 확인하는 파일)</p></li><li><p>!. 업데이트가 안 된 오래된 강좌여서 그런지 설치 과정 중 에러가 많았다. webpack 과 프레임워크간 오류도 있었고, window 사용자 경우 따로 설정해 줘야 하는 부분도 있었다. 하나씩 검색해 해결했지만, 생각보다 시간이 오래 걸렸다🤣🤣🤣</p></li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/04/05/TIL-210405/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210403</title>
      <link>https://codingppushu.github.io/2021/04/03/TIL-210403/</link>
      <guid>https://codingppushu.github.io/2021/04/03/TIL-210403/</guid>
      <pubDate>Sat, 03 Apr 2021 14:26:12 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;Full stack </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>Full stack - Clone Coding</th>  <tr style="text-align:center; background-color:#fff">    <td>get</td>    <td>sort</td>    <td>ESLint</td>  </tr> </table><h1 id="How"><a href="#How" class="headerlink" title="How?"></a>How?</h1><ul><li><p>Deleting a Video<br>=&gt; 삭제 할 비디오 url에 접근해 내용을 가져와서 비디오를 삭제한다.<br>=&gt; routes에서 deleteVideo 함수에 id 값을 지워주는 코드 추가한다.<br>=&gt; sort({_id:-1}) : 업로드 영상을 최신순으로 정렬 (id, 제목으로 정렬 가능)</p></li><li><p>ESLint<br>=&gt; 틀린 부분을 알려준다.<br>=&gt; 자세한 설치 과정은 개인 노션에 정리완료</p></li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/04/03/TIL-210403/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210402</title>
      <link>https://codingppushu.github.io/2021/04/02/TIL-210402/</link>
      <guid>https://codingppushu.github.io/2021/04/02/TIL-210402/</guid>
      <pubDate>Fri, 02 Apr 2021 14:35:12 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;Full stack </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>Full stack - Clone Coding</th>  <tr style="text-align:center; background-color:#fff">    <td>relationship</td>    <td>async / await</td>    <td>try catch</td>    <td>multer</td>  </tr>    <tr style="text-align:center; background-color:#fff">    <td>mongdb database</td>    <td></td>    <td></td>    <td></td>  </tr> </table><h1 id="How"><a href="#How" class="headerlink" title="How?"></a>How?</h1><ul><li><p>Comment Model<br>=&gt; relationship : 서로 다른 Schema를 가진 데이터가 문맥상(웹 상에서) 연관성을 가지고 있을 때 서로의 Schema를 ref를 통해 연결 시켜준다. / id(데이터 이름)만 넘기는 방식</p></li><li><p>Home Controller<br>=&gt; async / await : 프라미스 반환 / 프라미스 처리를 기다린다 (결과는 그 이후 반환)<br>=&gt; try catch : error를 잡아서 throw 해준다</p></li><li><p>Uploading and Creating a Video<br>=&gt; file upload시 파일 자체를 db에 저장하는 것이 아닌 file의 location을 넘긴다.<br>=&gt; file을 Upload하고 URL을 반환하는 middleware를 만든다.<br>=&gt; multer 설치 후 video 폴더 재지정<br>=&gt; mongdb database 수정 방법</p></li><li><p>Getting Video by ID<br>=&gt; search에서 query로 trem 받은것처럼 video id를 받음<br>=&gt; url로부터 정보를 가져오는 유일한 방법 : (:)과 이름을 넣으면 됨</p></li><li><p>Editing a Video<br>=&gt; video 수정시 title, description에 빈 공간 없게 수정</p></li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/04/02/TIL-210402/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210401</title>
      <link>https://codingppushu.github.io/2021/04/01/TIL-210401/</link>
      <guid>https://codingppushu.github.io/2021/04/01/TIL-210401/</guid>
      <pubDate>Thu, 01 Apr 2021 14:48:35 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;Full stack </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>Full stack - Clone Coding</th>  <tr style="text-align:center; background-color:#fff">    <td>mongoDB</td>    <td>file</td>    <td>model</td>    <td>schema</td>  </tr>    <tr style="text-align:center; background-color:#fff">    <td>dotenv</td>    <td>mongoose</td>    <td></td>    <td></td>  </tr> </table><h1 id="How"><a href="#How" class="headerlink" title="How?"></a>How?</h1><ul><li><p>More Controlers<br>=&gt; 상세 페이지 다이렉션 구현, 로그아웃 처리, upload(get/post) 처리 구현<br>=&gt; 요약 : 라우팅 처리 잘해야됨</p></li><li><p>MONGODB<br>=&gt; NoSQL 데이터베이스이며 적은 규칙과 절차로 작업이 가능해 가볍고 쉽게 다룰 수 있음<br>=&gt; 생성이 빠르고 엄격하지 않아 채팅 프로그램 등에 적합</p></li><li><p>Connecting to MongoDB<br>=&gt; String으로 된 데이터 베이스 요청</p></li><li><p>Configuring Dot Env<br>=&gt; .env : dotenv.config 로 .env 파일 불러옴<br>=&gt; 변수들을 process.env에 넣음</p></li><li><p>Video Model<br>=&gt; 데이터가 어떻게 생겨야 할지 알려준다.<br>=&gt; file/model/schema</p></li><li><p>팀 project 진행중..</p></li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/04/01/TIL-210401/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210330-210331</title>
      <link>https://codingppushu.github.io/2021/03/31/TIL-210330-210331/</link>
      <guid>https://codingppushu.github.io/2021/03/31/TIL-210330-210331/</guid>
      <pubDate>Wed, 31 Mar 2021 13:31:59 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;Full stack </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>Full stack - Clone Coding</th>  <tr style="text-align:center; background-color:#fff">    <td>queryString</td>    <td>get/post method</td>    <td>Fack DB</td>    <td>mixin</td>  </tr>    <tr style="text-align:center; background-color:#fff">    <td>status code</td>    <td>bodyParser</td>    <td>render</td>    <td>middlewares</td>  </tr> </table><h1 id="How"><a href="#How" class="headerlink" title="How?"></a>How?</h1><ul><li><p>Search Controller<br>=&gt; queryString (사용자 입력 데이터 전달 방법 중 하나), url 주소에 미리 협의된 데이터를 파라미터를 통해 넘김<br>=&gt; req.query로 input의 name 값으로 보낸 데이터를 받음<br>=&gt; 받은 데이터를 PUG로 전달해 받아줌<br>=&gt; controller query에 접근하려면 input method가 get이여야 함<br>=&gt; get method가 utl 정보를 추가해줌</p><figure class="highlight javascript"><figcaption><span>(ES6) 비구조화 할당 destructuring</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">query: &#123; <span class="attr">term</span>: searchingBy &#125;,</span><br><span class="line">&#125; = req;</span><br></pre></td></tr></table></figure></li><li><p>Join : pug<br>=&gt; post 방식 데이터 전송<br>=&gt; PUG에서, form태그 method를 post로 설정하고, input에 name속성을 추가해 정보를 보냄</p></li><li><p>Change Profile<br>=&gt; 라우팅 문제 해결 : :/id를 마지막에 찾을 수 있게 수정<br>=&gt; 이유 : id 값을 먼저 두면 뒤에 글자들이 다 id값으로 인식해서 id 페이지로 보내기 때문</p></li><li><p>home controller<br>=&gt; Fack DB 생성 : 배열 내 객체로 생성<br>=&gt; import 해 온 뒤 pug에 전달<br>=&gt; each 변수명 in 데이터 : 값 가져옴<br>=&gt; mixin : 컴포넌트화 시킴 (자주 반복되는 재활용 코드를 묶음)</p></li><li><p>join controller<br>=&gt; status code를 이용해 서버에 잘못된 요청 알림<br>=&gt; search : header + videoblock 적용<br>=&gt; join : get, post방식 분리 처리 (bodyParser 필요성 인지)<br>=&gt; userController에 post 처리 부분에서 비밀번호,비밀번호 확인 대조 작업 처림</p></li><li><p>Log in / User Profile controller<br>=&gt; urlRouter : url에 따라 어떤 함수를 실행할 지 방향 정함<br>=&gt; routes : 특정 url 포인팅 (함수로 생성)<br>=&gt; res.render 함수 : 템플릿 렌더링<br>=&gt; middlewares : fake db에 대한 공용 변수 생성<br>=&gt; url 주소 정의<br>=&gt; id 값에 따라 url값을 바꾸며 유저마다 다른 프로필 페이지 보여줌</p></li><li><p>팀 project 진행중..</p></li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/03/31/TIL-210330-210331/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
