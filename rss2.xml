<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>codingPpushu&#39;s dev story</title>
    <link>https://codingppushu.github.io/</link>
    
    <atom:link href="https://codingppushu.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Sat, 22 May 2021 14:51:02 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>TIL-210522</title>
      <link>https://codingppushu.github.io/2021/05/22/TIL-210522/</link>
      <guid>https://codingppushu.github.io/2021/05/22/TIL-210522/</guid>
      <pubDate>Sat, 22 May 2021 14:43:45 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;Vue project</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>Vue project</th>  <tr style="text-align:center; background-color:#fff">    <td>custom event</td>    <td>$event</td>    <td>v-model</td>    <td>watcher()</td>  </tr></table><ul><li>custom event<ul><li>자식이 부모 데이터를 바꿀때 사용</li><li>props로 전한 데이터 수정 X</li><li>$emit(‘name’, data)</li><li>@name = “데이터변경JS”</li></ul></li><li>$event<ul><li>event object를 뜻함</li></ul></li><li>v-model<ul><li>입력된 값을 data로 바로 저장</li></ul></li><li>watcher<ul><li>데이터 감시 함수</li><li>watch : { 감시데이터(){} }</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/05/22/TIL-210522/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210519</title>
      <link>https://codingppushu.github.io/2021/05/19/TIL-210519/</link>
      <guid>https://codingppushu.github.io/2021/05/19/TIL-210519/</guid>
      <pubDate>Wed, 19 May 2021 13:00:59 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;Vue project</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>Vue project</th>  <tr style="text-align:center; background-color:#fff">    <td>props</td>  </tr></table><ul><li>props<ul><li>자식이 부모 데이터를 쓰려면 사용</li><li>순서<ul><li>데이터를 보내고, 등록하고, 쓰면 된다.</li></ul></li><li>데이터는 최상위 컴포넌트에다가 만들어놔야한다.</li><li>주의 : 만들기 전에 생각하고 만들기</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/05/19/TIL-210519/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210516</title>
      <link>https://codingppushu.github.io/2021/05/16/TIL-210516/</link>
      <guid>https://codingppushu.github.io/2021/05/16/TIL-210516/</guid>
      <pubDate>Sun, 16 May 2021 14:44:07 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;Vue project</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>Vue project</th>  <tr style="text-align:center; background-color:#fff">    <td>개발환경 셋팅</td>    <td>vue data binding</td>    <td>v-for</td>    <td>vue event handler</td>  </tr>  <tr style="text-align:center; background-color:#fff">    <td>export default / import</td>    <td>export</td>    <td></td>    <td></td>  </tr></table><ul><li>완료<ul><li>react project 온라인 강의</li></ul></li><li>진행중<ul><li>JavaScript/jQuery - 문법 복습<ul><li>array ~ ajax 까지 완료</li></ul></li><li>vue<ul><li>vue data binding<ul><li>하드코딩 해놓으면 나중에 수정 어려움</li><li>html 속성도 가능</li></ul></li><li>v-for<ul><li>자료 갯수만큼 반복</li><li>:key 속성은 꼭 넣어주자</li></ul></li><li>실제 데이터를 넣어 상품목록 구현</li></ul></li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/05/16/TIL-210516/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210515</title>
      <link>https://codingppushu.github.io/2021/05/15/TIL-210515/</link>
      <guid>https://codingppushu.github.io/2021/05/15/TIL-210515/</guid>
      <pubDate>Sat, 15 May 2021 14:41:33 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;React Proje</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>React Project - Shop</th>  <tr style="text-align:center; background-color:#fff">    <td>sync / async</td>    <td>lazy loading</td>    <td>React devtools</td>    <td>memo</td>  </tr>  <tr style="text-align:center; background-color:#fff">    <td>PWA</td>    <td>localStorage</td>    <td></td>    <td></td>  </tr></table><ul><li>sync / async<ul><li>동기/비동식 방식</li></ul></li><li>lazy loading<ul><li>초기 접속 속도를 위해 import</li></ul></li><li>React Dev Tools<ul><li>크롬 확장 프로그램</li><li>성능 최적화 할때 사용</li><li>props, state 등등 확인 가능</li></ul></li><li>memo<ul><li>쓸데없는 재렌더링 막기</li></ul></li><li>PWA (Progressive Web App)<ul><li>안드로이드/iOS 모바일 앱처럼 사용할 수 있게 만드는 웹개발 기술</li></ul></li><li>localStorage<ul><li>브라우저에 몰래 정보를 저장하고 싶을 때 사용</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/05/15/TIL-210515/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210513</title>
      <link>https://codingppushu.github.io/2021/05/13/TIL-210513/</link>
      <guid>https://codingppushu.github.io/2021/05/13/TIL-210513/</guid>
      <pubDate>Thu, 13 May 2021 14:45:20 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;JavaScript/jQuery - 문법 복습 진행&lt;ul&gt;
&lt;li&gt;존재 목적 ~ 이벤트 버블링, </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><ul><li>JavaScript/jQuery - 문법 복습 진행<ul><li>존재 목적 ~ 이벤트 버블링, 함수까지 완료</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/05/13/TIL-210513/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210512</title>
      <link>https://codingppushu.github.io/2021/05/12/TIL-210512/</link>
      <guid>https://codingppushu.github.io/2021/05/12/TIL-210512/</guid>
      <pubDate>Wed, 12 May 2021 14:43:18 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;React Proje</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>React Project - Shop</th>  <tr style="text-align:center; background-color:#fff">    <td>reducer/dispatch</td>    <td><컴포넌트></td>    <td>findIndex()</td>    <td>react-if문 패턴</td>  </tr></table><ul><li>reducer/dispatch<ul><li>redux store로 전달할 데이터를 작성할 수 있다.</li><li>미리보기 띄울 때 페이지를 이동하면 초기화 됨<ul><li>나중에 사이트 발행하면 제대로 동작</li></ul></li></ul></li><li>&lt;컴포넌트&gt; 는 onClick 속성을 달아도 동작하지 않을 수 있음</li><li>findIndex()<ul><li>특정 값이 array 안에 있는지 찾고 싶을 때 사용</li></ul></li><li>리액트에서 자주 사용하는 if문 패턴<ul><li>컴포넌트 안에서 쓰는 if/else</li><li>JSX안에서 쓰는 삼항연산자</li><li>&amp;&amp; 연산자로 if 역할 대신하기</li><li>switch / case 조건문</li><li>object 자료형을 응용한 enum</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/05/12/TIL-210512/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210511</title>
      <link>https://codingppushu.github.io/2021/05/11/TIL-210511/</link>
      <guid>https://codingppushu.github.io/2021/05/11/TIL-210511/</guid>
      <pubDate>Tue, 11 May 2021 14:31:21 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;React Proje</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>React Project - Shop</th>  <tr style="text-align:center; background-color:#fff">    <td>reducer/dispatch</td>  </tr></table><ul><li>reducer/dispatch 데이터 수정<ul><li>state 데이터의 수정방법을 미리 정의한다.</li><li>데이터의 수정방법을 불러서 수정한다.</li><li>HTML 안에서 dispatch()를 사용해 reducer()를 동작시킬 수 있다.</li></ul></li><li>reducer/dispatch 하나 더 만들기<ul><li>state 초기값과 reducer 를 만들고, combineReducers()를 redux에서 import해오고 모든 reducer를 object 형식으로 담는다.</li></ul></li><li>사용 이유<ul><li>상태관리가 용이함</li></ul></li><li>주의할 점<ul><li>state 데이터를 다른 컴포넌트에서 쓸 일이 없다면 간단하게 useState()로 해당 컴포넌트 안에 간단하게 만든다.</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/05/11/TIL-210511/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210510</title>
      <link>https://codingppushu.github.io/2021/05/10/TIL-210510/</link>
      <guid>https://codingppushu.github.io/2021/05/10/TIL-210510/</guid>
      <pubDate>Mon, 10 May 2021 14:23:18 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;React Proje</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>React Project - Shop</th>  <tr style="text-align:center; background-color:#fff">    <td>Ajax</td>    <td>component 중첩시 state 전달</td>    <td>state 조작법</td>    <td>Context API</td>  </tr>  <tr style="text-align:center; background-color:#fff">    <td>react-transition-group</td>    <td></td>    <td></td>    <td></td>  </tr></table><ul><li>리액트에서의 Ajax<ul><li>서버에 새로고침없이 요청 할 수 있게 도와주는 코드<ul><li>axios 라이브러리 설치</li><li>더보기 버튼 구현 (클릭시 상품 데이터 가져온 후 메인페이지 하단에 추가)</li></ul></li></ul></li><li>component 중첩시 state 전달<ul><li>component1 =&gt; component2 =&gt; component3 (props 문법을 두 번 써주면 됨)</li></ul></li><li>state 조작법<ul><li>사본을 만든다.</li><li>사본을 변경한다.</li><li>사본을 변경 함수에 넣는다.</li></ul></li><li>Context API<ul><li>props 연속 사용이 싫다면 사용</li></ul></li><li>react-transition-group<ul><li>컴포넌트 등장/업데이트시 transition 쉽게 줄 수 있음</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/05/10/TIL-210510/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210508</title>
      <link>https://codingppushu.github.io/2021/05/08/TIL-210508/</link>
      <guid>https://codingppushu.github.io/2021/05/08/TIL-210508/</guid>
      <pubDate>Sat, 08 May 2021 11:26:26 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;React Proje</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>React Project - Shop</th>  <tr style="text-align:center; background-color:#fff">    <td>Lifecycle Hook</td>    <td>useEffect Hook</td>    <td>setTimeout()/clearTimeout()</td>  </tr></table><ul><li>Lifecycle Hook<ul><li>Lifecycle : 컴포넌트는 어떻게 살다 죽는가<ul><li>생성 될 수 있고</li><li>삭제 될 수 있고</li><li>관련 state가 변경되면 재렌더링(업데이트)이 일어날 수 있다.</li></ul></li><li>Hook : 컴포넌트 중간 Hook을 걸 수 있다. (참견)</li></ul></li><li>useEffect Hook<ul><li>function 컴포넌트에서 사용하는 Hook</li><li>요즘 많이 사용 (약간 더 짧고 쉽기 때문)</li><li>실행조건<ul><li>mount 끝났을 때</li><li>update 되고난 후에</li></ul></li><li>useEffect()는 컴포넌트 등장과 업데이트가 되고나서 항상 실행됨</li></ul></li><li>setTimeout()<ul><li>사용후 꼭 해제해야됨 =&gt; clearTimeout()</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/05/08/TIL-210508/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TIL-210507</title>
      <link>https://codingppushu.github.io/2021/05/07/TIL-210507/</link>
      <guid>https://codingppushu.github.io/2021/05/07/TIL-210507/</guid>
      <pubDate>Fri, 07 May 2021 14:26:16 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What?&quot;&gt;&lt;/a&gt;What?&lt;/h1&gt;&lt;table style=&quot;text-align:center&quot;&gt;
  &lt;th colspan=&#39;4&#39;&gt;React Proje</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><table style="text-align:center">  <th colspan='4'>React Project - Shop</th>  <tr style="text-align:center; background-color:#fff">    <td>React Router</td>    <td>BrowserRouter</td>    <td>HashRouter</td>    <td>Route</td>  </tr>  <tr style="text-align:center; background-color:#fff">    <td>styled-components</td>    <td>Sass</td>    <td></td>    <td></td>  </tr></table><ul><li>React Router<ul><li>여러가지 페이지를 만들고 싶다면 사용</li><li>nreact-router-dom 라이브러리 이용</li><li>각각의 페이지를 보여주는게 아니고 HTML 내부 내용을 갈아치워서 다른 페이지처럼 보여줌</li></ul></li><li>BrowserRouter<ul><li>라우팅을 리액트가 아니라 서버에게 요청할 수도 있음 (위험)</li><li>서버에서 서버 라우팅 방지하는 API를 따로 작성해둬야함</li></ul></li><li>HashRouter<ul><li>라우팅 안전하게 할 수 있게 도와줌</li><li>사이트 주소 뒤에 #이 붙으며 #뒤에 적는 것은 서버로 전달 X</li></ul></li><li>라우팅<ul><li>여러 태그들 import 필요 (Link, Switch, history..)</li><li>원하는 곳에 <Route><Route/>태그를 작성</li><li>서버에서 사이트 구성에 필요한 데이터 받아온 후 HTML로 보여줌</li><li><Route>안에 path와 path 방문시 보여줄 HTML 적으면 됨</li><li>URL 파라미터로 상세페이지 만들기</li><li>데이터는 항상 위에서 아래로 흘러야함</li></ul></li><li>styled-components<ul><li>class 선언없이 컴포넌트에 CSS를 직접 장착</li></ul></li><li>Sass 문법<ul><li>변수, @import, nesting, extends, @mixin/@include</li></ul></li></ul><h1 id="How"><a href="#How" class="headerlink" title="How?"></a>How?</h1><ul><li>문제: node-sass 설치 시 에러 발생함</li><li>해결: 처음엔 node-sass 버전을 낮춰서 재설치했으나, 해결이 되지 않았고, node.js LTS 버전으로 재설치해 오류를 해결했다.😁</li></ul>]]></content:encoded>
      
      
      <category domain="https://codingppushu.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://codingppushu.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://codingppushu.github.io/2021/05/07/TIL-210507/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
